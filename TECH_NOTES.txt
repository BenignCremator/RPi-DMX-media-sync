Notes on Technologies

DMX  (lighting control protocol
-------------------------------

DMX, or DMX-512, is a frame based lighting control protocol that works over
RS-485 serial networks.  So, multi-node, balanced pair daisy chain.  The first
part of the frame is a frame base silence (yes, lack of signal is part of the
signal), then timing signals and a start code, and then the data block.  The
data block is in the form of up to 512 bytes (called slots or channels), in
sequential order (the ordering referred to as addresses), each controlling
levels of that channel, from 0 to 255, and ending at the highest address
assigned (referred to as 'patched', a somewhat legacy term held over from when
physical cables patched a lighting channel to a dimmer and a controller).  So if
your Universe has 12 lighting instruments, assigned to addresses 21 to 32, the
frame will take longer to send then if they were addressed 1 to 12.  After that
is the frame base silence again.


http://en.wikipedia.org/wiki/DMX512


ArtNET (Protocol For DMX over UDP)
----------------------------------
ArtNET takes a DMX frame, and wraps it in a UDP/IP packet.  Each packet has a
Universe ID as part of the packet header, allowing for up to 40 (some
implementations limit this to 16), 256 or 32,768 Universes through a single
ArtNET network, depending upon version of ArtNET used. There are three version,
numbered I. II, and III.


http://en.wikipedia.org/wiki/Art-Net
http://www.opendmx.net/index.php/Linux_ArtNet_Node
http://sourceforge.net/projects/libartnet-win32/
http://www.lightjams.com/artnet.html
http://www.thedmxwiki.com/dmx_definitions/artnet
http://www.nomis52.net/?section=projects&sect2=artnet&page=whatis


OLA (ArtNET implementation)
---------------------------
Probably the best implementation of ArtNET for Linux is named OLA:

http://opendmx.net/index.php/OLA

It implements a bunch of stuff other then ArtNET, but that is the part we are most interested in currently.

QLC (Lighting Controller)
-------------------------
The software I use on my Linux Laptop is either QLC or QLC+:

http://opendmx.net/index.php/Q_Light_Controller_%28QLC%29
http://opendmx.net/index.php/Q_Light_Controller_Plus_%28QLC%2B%29

QLC+ is a continuation fork.  The original developer moved on to bigger and
better things, but did not choose a successor.  So the community started QLC+ so
previous work did not wither on the vine.


Media Players
-------------
This leaves the actual media player to deal with.  I was originally going to use
Xine and pyXine, but I believe that they have an X dependency which will make it
unusable for a Raspberry Pi.  But I may be wrong about that.  However, while it
is the largest step, it is also the last part of the project.  There is enough
here to get started.

Python DMX APIs 
---------------
http://www.opendmx.net/index.php/OLA_Python_API

http://pydmx.sourceforge.net/

https://pypi.python.org/pypi/dmx/1.0

http://agreeabledisagreements.blogspot.com/2012/10/a-beginners-guide-to-dmx512-in-python.html
